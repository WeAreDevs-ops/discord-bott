
<%- include('layout', { title: guild.name + ' - Configuration', showSidebar: true, guild: guild, body: `
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex align-items-center mb-4">
                ${guild.icon ? `
                    <img src="https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png" 
                         class="rounded me-3" width="64" height="64" alt="${guild.name}">
                ` : `
                    <div class="bg-secondary rounded d-flex align-items-center justify-content-center me-3" 
                         style="width: 64px; height: 64px;">
                        <i class="fas fa-server text-white fa-2x"></i>
                    </div>
                `}
                <div>
                    <h2 class="mb-1">${guild.name}</h2>
                    <p class="text-muted mb-0">Configure your bot settings</p>
                </div>
            </div>

            <!-- Welcome Messages Section -->
            <div class="card mb-4" id="welcome">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-door-open me-2"></i>
                        Welcome Messages
                    </h5>
                </div>
                <div class="card-body">
                    <form id="welcomeForm">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="welcomeChannel" class="form-label">Welcome Channel</label>
                                    <select class="form-select" id="welcomeChannel">
                                        <option value="">Select a channel...</option>` +
                                        channels.map(channel => `
                                            <option value="${channel.id}" ${settings.welcome && settings.welcome.welcomeChannel === channel.id ? 'selected' : ''}>
                                                # ${channel.name}
                                            </option>
                                        `).join('') + `
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="welcomeEnabled" 
                                               ${settings.welcome && settings.welcome.enabled ? 'checked' : ''}>
                                        <label class="form-check-label" for="welcomeEnabled">
                                            Enable welcome messages
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="welcomeMessages" class="form-label">Welcome Messages</label>
                                    <textarea class="form-control" id="welcomeMessages" rows="4" 
                                              placeholder="Welcome {user} to {server}! You are the {membercount} member!">${settings.welcome && settings.welcome.welcomeMessages ? settings.welcome.welcomeMessages.join('\\n') : ''}</textarea>
                                    <div class="form-text">
                                        Variables: {user}, {username}, {displayname}, {mention}, {server}, {membercount}
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>
                            Save Welcome Settings
                        </button>
                    </form>
                </div>
            </div>

            <!-- Auto Moderation Section -->
            <div class="card mb-4" id="automod">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-shield-alt me-2"></i>
                        Auto Moderation
                    </h5>
                </div>
                <div class="card-body">
                    <form id="automodForm">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="linkFilter" 
                                               ${settings.automod && settings.automod.linkFilter ? 'checked' : ''}>
                                        <label class="form-check-label" for="linkFilter">
                                            <strong>Link Filter</strong><br>
                                            <small class="text-muted">Automatically delete messages containing links</small>
                                        </label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="badWordFilter" 
                                               ${settings.automod && settings.automod.badWordFilter ? 'checked' : ''}>
                                        <label class="form-check-label" for="badWordFilter">
                                            <strong>Bad Word Filter</strong><br>
                                            <small class="text-muted">Automatically delete inappropriate content</small>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="badWords" class="form-label">Bad Words List</label>
                                    <textarea class="form-control" id="badWords" rows="4" 
                                              placeholder="Enter bad words, one per line">${settings.automod && settings.automod.badWords ? settings.automod.badWords.join('\\n') : ''}</textarea>
                                    <div class="form-text">
                                        One word per line. Administrators and moderators bypass these filters.
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>
                            Save Auto Moderation Settings
                        </button>
                    </form>
                </div>
            </div>

            <!-- Auto Role Section -->
            <div class="card mb-4" id="autorole">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-user-plus me-2"></i>
                        Auto Role
                    </h5>
                </div>
                <div class="card-body">
                    <form id="autoroleForm">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="autoRole" class="form-label">Auto Role</label>
                                    <select class="form-select" id="autoRole">
                                        <option value="">No auto role</option>` +
                                        roles.map(role => `
                                            <option value="${role.id}" ${settings.autorole === role.id ? 'selected' : ''}>
                                                ${role.name}
                                            </option>
                                        `).join('') + `
                                    </select>
                                    <div class="form-text">
                                        This role will be automatically assigned to new members when they join the server.
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>
                            Save Auto Role Settings
                        </button>
                    </form>
                </div>
            </div>

            <!-- Commands Section -->
            <div class="card mb-4" id="commands">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-terminal me-2"></i>
                        Command Settings
                    </h5>
                </div>
                <div class="card-body">
                    <p class="text-muted">
                        Current command assignments and channel restrictions are managed through the bot commands.
                        Use <code>/commandassign</code> and <code>/restrictchannel</code> commands in Discord for now.
                    </p>
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Note:</strong> Full command management interface will be added in a future update.
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const guildId = '${guild.id}';

    // Handle welcome form submission
    document.getElementById('welcomeForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = {
            channelId: document.getElementById('welcomeChannel').value,
            messages: document.getElementById('welcomeMessages').value.split('\\n').filter(m => m.trim()),
            enabled: document.getElementById('welcomeEnabled').checked
        };

        try {
            const response = await axios.post(\`/api/guild/\${guildId}/welcome\`, formData);
            if (response.data.success) {
                showAlert('Welcome settings saved successfully!', 'success');
            }
        } catch (error) {
            showAlert('Failed to save welcome settings', 'danger');
        }
    });

    // Handle automod form submission
    document.getElementById('automodForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = {
            linkFilter: document.getElementById('linkFilter').checked,
            badWordFilter: document.getElementById('badWordFilter').checked,
            badWords: document.getElementById('badWords').value.split('\\n').filter(w => w.trim())
        };

        try {
            const response = await axios.post(\`/api/guild/\${guildId}/automod\`, formData);
            if (response.data.success) {
                showAlert('Auto moderation settings saved successfully!', 'success');
            }
        } catch (error) {
            showAlert('Failed to save auto moderation settings', 'danger');
        }
    });

    // Handle autorole form submission
    document.getElementById('autoroleForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = {
            roleId: document.getElementById('autoRole').value
        };

        try {
            const response = await axios.post(\`/api/guild/\${guildId}/autorole\`, formData);
            if (response.data.success) {
                showAlert('Auto role settings saved successfully!', 'success');
            }
        } catch (error) {
            showAlert('Failed to save auto role settings', 'danger');
        }
    });

    function showAlert(message, type) {
        const alertDiv = document.createElement('div');
        alertDiv.className = \`alert alert-\${type} alert-dismissible fade show\`;
        alertDiv.innerHTML = \`
            \${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        \`;

        document.querySelector('.container-fluid').insertBefore(alertDiv, document.querySelector('.container-fluid').firstChild);

        setTimeout(() => {
            alertDiv.remove();
        }, 5000);
    }
});
</script>
` }) %>
